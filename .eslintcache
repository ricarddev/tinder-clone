[{"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\index.js":"1","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\App.js":"2","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\reportWebVitals.js":"3","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Header\\Header.js":"4","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\TinderCards\\TinderCards.js":"5","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\firebase.js":"6","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\TinderCards\\SwipeButtons.js":"7","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Chats\\Chats.js":"8","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Chats\\Chat\\Chat.js":"9","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Chats\\Chat\\ChatScreen.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":904,"mtime":1610632096020,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1328,"mtime":1610630264751,"results":"15","hashOfConfig":"12"},{"size":1040,"mtime":1610627777859,"results":"16","hashOfConfig":"12"},{"size":531,"mtime":1610626604728,"results":"17","hashOfConfig":"12"},{"size":1299,"mtime":1610629286521,"results":"18","hashOfConfig":"12"},{"size":781,"mtime":1610633862787,"results":"19","hashOfConfig":"12"},{"size":704,"mtime":1610633932113,"results":"20","hashOfConfig":"12"},{"size":1816,"mtime":1610634987640,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"axlx6q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\index.js",[],["45","46"],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\App.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\reportWebVitals.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Header\\Header.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\TinderCards\\TinderCards.js",["47"],"import { People } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport db from '../../firebase';\r\nimport './TinderCards.css';\r\n\r\n\r\nfunction TinderCards() {\r\n    \r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('people').onSnapshot(snapshot => (\r\n            setPeople(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"cards-container\">\r\n                {people.map((person) => (\r\n                    <TinderCard className=\"swipe\" key={person.name} preventSwipe={[\"up\", \"down\"]}>\r\n                        <div className=\"card\" style={{ backgroundImage: `url(${person.url}`}}>\r\n                            <h3>{person.name}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TinderCards;\r\n","C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\firebase.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\TinderCards\\SwipeButtons.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Chats\\Chats.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Chats\\Chat\\Chat.js",[],"C:\\Users\\ricky\\Workplace\\React projects\\tinder-clone\\src\\components\\Chats\\Chat\\ChatScreen.js",["48"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport './ChatScreen.css';\r\n\r\nfunction ChatScreen() {\r\n\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            name:\"Ellen\",\r\n            image:\"https://images.pexels.com/photos/937481/pexels-photo-937481.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\r\n            message: \"Ey whats up!\"\r\n        },\r\n        {\r\n            name:\"Ellen\",\r\n            image:\"https://images.pexels.com/photos/937481/pexels-photo-937481.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\r\n            message: \"How's it going?\"\r\n        },\r\n        {\r\n            message: \"Pretty good! Hows it going?\"\r\n        }\r\n    ]);\r\n\r\n    return (\r\n        <div className=\"chatScreen\">\r\n            <p>YOU MATCHED WITH ELLEN ON 10/08/20</p>\r\n            {messages.map(message => (  \r\n                message.name ? (\r\n                    <div className=\"chat-msg flex\">\r\n                        <Avatar className=\"chat-img\" src={message.image} alt={message.name} />\r\n                        <p className=\"chat-txt\">{message.message}</p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"chat-msg flex\">\r\n                        <p className=\"chat-txt-user\">{message.message}</p>\r\n                    </div>\r\n                )\r\n            ))}\r\n            <div >\r\n                <form className=\"msg-sender\">\r\n                    <input className=\"input-msg\" type=\"text\" placeholder=\"Type a message...\" />\r\n                    <IconButton>    \r\n                        <button className=\"form-btn\"type=\"submit\">Send</button>\r\n                    </IconButton>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatScreen\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":16},{"ruleId":"53","severity":1,"message":"57","line":8,"column":22,"nodeType":"55","messageId":"56","endLine":8,"endColumn":33},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'People' is defined but never used.","Identifier","unusedVar","'setMessages' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]